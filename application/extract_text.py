from bs4 import BeautifulSoup
from os import listdir
import time
import os

def extract_abstract(srcFile, destAbstractFile):
    """
    Extract the abstract from an xml document generated by grobid
    :param srcFile: the path to the xml document
    :param destAbstractFile: the path where to save the output file
    """
    try:
        with open(srcFile, 'r', encoding='utf-8', errors='ignore') as file:
            soup = BeautifulSoup(file, 'lxml')
            abstract = soup.find('abstract').get_text()
            text = '\'' + abstract + '\''

        with open(destAbstractFile, 'w') as file:
            file.write(text)
    except Exception as e:
        print(e)


def extract_body(srcFile, destBodyFile):
    """
      Extract the body from an xml document generated by grobid
      :param srcFile: the path to the xml document
      :param destBodyFileFile: the path where to save the output file
      """
    try:
        with open(srcFile, 'r', encoding='utf-8', errors='ignore') as file:
            soup = BeautifulSoup(file, 'html.parser')
            body = soup.find('body').get_text()
            text = '\'' + body + '\''

        with open(destBodyFile, 'w') as file:
            file.write(text)
    except Exception as e:
        print(e)

def extract_keywords(doc):
    """
    Extract the keywords from an xml document generated by grobid
    :param doc: the path to the xml document
    :return: a list of keywords
    """
    with open(doc, 'r') as file:
        soup = BeautifulSoup(file, 'html.parser')
        keywords = soup.find('keywords').find_all('term')
        K = []
        for keyword in keywords:
            K.append(keyword.get_text())
    return K


def run_extract(srcFolder, destAbstract, destBody):
    """
    Extract the body and abstract from grobid documents
    :param srcFolder: the path to the folder containing the documents to process
    :param destAbstract: the path to the folder where to save the abstracts
    :param destBody: the path to the folder where to save the bodies
    :return:
    """
    for file in os.listdir(srcFolder):
        print('src folder', srcFolder)
        print('abstract', destAbstract)
        print('file', file)
        extract_abstract(os.path.join(srcFolder, file), os.path.join(destAbstract, file.strip('.tei.xml')))
        extract_body(os.path.join(srcFolder, file), os.path.join(destBody, file.strip('.tei.xml')))